#- name: prepare some dirs
#  file: name={{ item }} state=directory
#  with_items:
#  - "{{ BIN_DIR }}"
#  - "{{ CA_DIR }}"
#  - "{{ ETCD_CA_DIR }}"    # etcd 证书目录
#  - "{{ ETCD_DATA_DIR }}"    # etcd 工作目录
#
#- name: 下载etcd二进制文件
#  copy: src={{ WORK_DIR }}/bin/{{ item }} dest={{ BIN_DIR }}/{{ item }} mode=0755
#  with_items:
#  - etcd
#  - etcdctl
#  tags: upgrade_etcd
#
#- name: 将etcd证书发布到节点
#  copy:
#    src: "{{ role_path }}/../thanos_auth/files/{{ K8S_MASTER_DOMAIN }}/{{ item }}"
#    dest: "/etc/etcd/ssl"
#  with_items:
#    - etcd.pem
#    - etcd-key.pem

- name: Create etcd Configuration file
  template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ ETCD_CONF_DIR }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - etcd.conf
  register: change_etcd_config

- name: Copy the systemd unit file to node
  template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ SYSTEM_DIR }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - etcd.service
  register: change_etcd_system

#- name: 开机启用etcd服务
#  shell: systemctl enable etcd
#  ignore_errors: true
#
#- name: Start and enable etcd service
#  when: change_etcd_system|succeeded and change_etcd_system|succeeded
#  systemd:
#    name: etcd
#    enabled: true
#    state: started
#    daemon_reload: true
#  tags: upgrade_etcd
#
#- name: Reload etcd service
#  when: change_etcd_config|changed or change_etcd_system|changed or pki_certs|changed or openssl_cert|changed
#  systemd:
#    name: etcd
#    state: restarted
#    daemon_reload: true
#  tags: upgrade_etcd
#
#- name: Get etcd status
#  command: |-
#    {{ BIN_DIR }}/etcdctl --ca-file={{ ETCD_PEER_CA_FILE }} \
#    --cert-file={{ ETCD_PEER_CERT_FILE }} --key-file={{ ETCD_PEER_KEY_FILE}} cluster-health
#  delegate_to: "{{ groups['etcd'][0] }}"
#  run_once: yes
#  register: etcd_status
#  tags: status
#- debug: var=etcd_status.stdout_lines
#  tags: status
#
#- name: 以轮询的方式等待服务同步完成
#  shell: "systemctl status etcd.service|grep Active"
#  register: etcd_status
#  until: '"running" in etcd_status.stdout'
#  retries: 8
#  delay: 8
#  tags: upgrade_etcd
